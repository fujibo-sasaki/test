"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/semaphore";
exports.ids = ["vendor-chunks/semaphore"];
exports.modules = {

/***/ "(action-browser)/./node_modules/semaphore/lib/semaphore.js":
/*!*************************************************!*\
  !*** ./node_modules/semaphore/lib/semaphore.js ***!
  \*************************************************/
/***/ ((module) => {

eval("\n(function(global) {\n    \"use strict\";\n    var nextTick = function(fn) {\n        setTimeout(fn, 0);\n    };\n    if (typeof process != \"undefined\" && process && typeof process.nextTick == \"function\") {\n        // node.js and the like\n        nextTick = process.nextTick;\n    }\n    function semaphore(capacity) {\n        var semaphore = {\n            capacity: capacity || 1,\n            current: 0,\n            queue: [],\n            firstHere: false,\n            take: function() {\n                if (semaphore.firstHere === false) {\n                    semaphore.current++;\n                    semaphore.firstHere = true;\n                    var isFirst = 1;\n                } else {\n                    var isFirst = 0;\n                }\n                var item = {\n                    n: 1\n                };\n                if (typeof arguments[0] == \"function\") {\n                    item.task = arguments[0];\n                } else {\n                    item.n = arguments[0];\n                }\n                if (arguments.length >= 2) {\n                    if (typeof arguments[1] == \"function\") item.task = arguments[1];\n                    else item.n = arguments[1];\n                }\n                var task = item.task;\n                item.task = function() {\n                    task(semaphore.leave);\n                };\n                if (semaphore.current + item.n - isFirst > semaphore.capacity) {\n                    if (isFirst === 1) {\n                        semaphore.current--;\n                        semaphore.firstHere = false;\n                    }\n                    return semaphore.queue.push(item);\n                }\n                semaphore.current += item.n - isFirst;\n                item.task(semaphore.leave);\n                if (isFirst === 1) semaphore.firstHere = false;\n            },\n            leave: function(n) {\n                n = n || 1;\n                semaphore.current -= n;\n                if (!semaphore.queue.length) {\n                    if (semaphore.current < 0) {\n                        throw new Error(\"leave called too many times.\");\n                    }\n                    return;\n                }\n                var item = semaphore.queue[0];\n                if (item.n + semaphore.current > semaphore.capacity) {\n                    return;\n                }\n                semaphore.queue.shift();\n                semaphore.current += item.n;\n                nextTick(item.task);\n            },\n            available: function(n) {\n                n = n || 1;\n                return semaphore.current + n <= semaphore.capacity;\n            }\n        };\n        return semaphore;\n    }\n    ;\n    if (true) {\n        // node export\n        module.exports = semaphore;\n    } else {}\n})(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zZW1hcGhvcmUvbGliL3NlbWFwaG9yZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUUsVUFBU0EsTUFBTTtJQUVqQjtJQUVBLElBQUlDLFdBQVcsU0FBVUMsRUFBRTtRQUFJQyxXQUFXRCxJQUFJO0lBQUk7SUFDbEQsSUFBSSxPQUFPRSxXQUFXLGVBQWVBLFdBQVcsT0FBT0EsUUFBUUgsUUFBUSxJQUFJLFlBQVk7UUFDdEYsdUJBQXVCO1FBQ3ZCQSxXQUFXRyxRQUFRSCxRQUFRO0lBQzVCO0lBRUEsU0FBU0ksVUFBVUMsUUFBUTtRQUMxQixJQUFJRCxZQUFZO1lBQ2ZDLFVBQVVBLFlBQVk7WUFDdEJDLFNBQVM7WUFDVEMsT0FBTyxFQUFFO1lBQ1RDLFdBQVc7WUFFWEMsTUFBTTtnQkFDTCxJQUFJTCxVQUFVSSxTQUFTLEtBQUssT0FBTztvQkFDM0JKLFVBQVVFLE9BQU87b0JBQ2pCRixVQUFVSSxTQUFTLEdBQUc7b0JBQ3RCLElBQUlFLFVBQVU7Z0JBQ2hCLE9BQU87b0JBQ0wsSUFBSUEsVUFBVTtnQkFDaEI7Z0JBQ04sSUFBSUMsT0FBTztvQkFBRUMsR0FBRztnQkFBRTtnQkFFbEIsSUFBSSxPQUFPQyxTQUFTLENBQUMsRUFBRSxJQUFJLFlBQVk7b0JBQ3RDRixLQUFLRyxJQUFJLEdBQUdELFNBQVMsQ0FBQyxFQUFFO2dCQUN6QixPQUFPO29CQUNORixLQUFLQyxDQUFDLEdBQUdDLFNBQVMsQ0FBQyxFQUFFO2dCQUN0QjtnQkFFQSxJQUFJQSxVQUFVRSxNQUFNLElBQUksR0FBSTtvQkFDM0IsSUFBSSxPQUFPRixTQUFTLENBQUMsRUFBRSxJQUFJLFlBQVlGLEtBQUtHLElBQUksR0FBR0QsU0FBUyxDQUFDLEVBQUU7eUJBQzFERixLQUFLQyxDQUFDLEdBQUdDLFNBQVMsQ0FBQyxFQUFFO2dCQUMzQjtnQkFFQSxJQUFJQyxPQUFPSCxLQUFLRyxJQUFJO2dCQUNwQkgsS0FBS0csSUFBSSxHQUFHO29CQUFhQSxLQUFLVixVQUFVWSxLQUFLO2dCQUFHO2dCQUVoRCxJQUFJWixVQUFVRSxPQUFPLEdBQUdLLEtBQUtDLENBQUMsR0FBR0YsVUFBVU4sVUFBVUMsUUFBUSxFQUFFO29CQUN2RCxJQUFJSyxZQUFZLEdBQUc7d0JBQ2xCTixVQUFVRSxPQUFPO3dCQUNqQkYsVUFBVUksU0FBUyxHQUFHO29CQUN2QjtvQkFDUCxPQUFPSixVQUFVRyxLQUFLLENBQUNVLElBQUksQ0FBQ047Z0JBQzdCO2dCQUVBUCxVQUFVRSxPQUFPLElBQUlLLEtBQUtDLENBQUMsR0FBR0Y7Z0JBQzlCQyxLQUFLRyxJQUFJLENBQUNWLFVBQVVZLEtBQUs7Z0JBQ25CLElBQUlOLFlBQVksR0FBR04sVUFBVUksU0FBUyxHQUFHO1lBQ2hEO1lBRUFRLE9BQU8sU0FBU0osQ0FBQztnQkFDaEJBLElBQUlBLEtBQUs7Z0JBRVRSLFVBQVVFLE9BQU8sSUFBSU07Z0JBRXJCLElBQUksQ0FBQ1IsVUFBVUcsS0FBSyxDQUFDUSxNQUFNLEVBQUU7b0JBQzVCLElBQUlYLFVBQVVFLE9BQU8sR0FBRyxHQUFHO3dCQUMxQixNQUFNLElBQUlZLE1BQU07b0JBQ2pCO29CQUVBO2dCQUNEO2dCQUVBLElBQUlQLE9BQU9QLFVBQVVHLEtBQUssQ0FBQyxFQUFFO2dCQUU3QixJQUFJSSxLQUFLQyxDQUFDLEdBQUdSLFVBQVVFLE9BQU8sR0FBR0YsVUFBVUMsUUFBUSxFQUFFO29CQUNwRDtnQkFDRDtnQkFFQUQsVUFBVUcsS0FBSyxDQUFDWSxLQUFLO2dCQUNyQmYsVUFBVUUsT0FBTyxJQUFJSyxLQUFLQyxDQUFDO2dCQUUzQlosU0FBU1csS0FBS0csSUFBSTtZQUNuQjtZQUVBTSxXQUFXLFNBQVNSLENBQUM7Z0JBQ3BCQSxJQUFJQSxLQUFLO2dCQUNULE9BQU9SLFVBQVVFLE9BQU8sR0FBR00sS0FBS1IsVUFBVUMsUUFBUTtZQUNuRDtRQUNEO1FBRUEsT0FBT0Q7SUFDUjs7SUFFQSxJQUFJLElBQW1CLEVBQVU7UUFDN0IsY0FBYztRQUNka0IsT0FBT0QsT0FBTyxHQUFHakI7SUFDckIsT0FBTyxFQVFOO0FBQ0QsR0FBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2F6dXJlLW9wZW4tYWktYWNjZWxlcmF0b3IvLi9ub2RlX21vZHVsZXMvc2VtYXBob3JlL2xpYi9zZW1hcGhvcmUuanM/MDAyNyJdLCJzb3VyY2VzQ29udGVudCI6WyI7KGZ1bmN0aW9uKGdsb2JhbCkge1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBuZXh0VGljayA9IGZ1bmN0aW9uIChmbikgeyBzZXRUaW1lb3V0KGZuLCAwKTsgfVxuaWYgKHR5cGVvZiBwcm9jZXNzICE9ICd1bmRlZmluZWQnICYmIHByb2Nlc3MgJiYgdHlwZW9mIHByb2Nlc3MubmV4dFRpY2sgPT0gJ2Z1bmN0aW9uJykge1xuXHQvLyBub2RlLmpzIGFuZCB0aGUgbGlrZVxuXHRuZXh0VGljayA9IHByb2Nlc3MubmV4dFRpY2s7XG59XG5cbmZ1bmN0aW9uIHNlbWFwaG9yZShjYXBhY2l0eSkge1xuXHR2YXIgc2VtYXBob3JlID0ge1xuXHRcdGNhcGFjaXR5OiBjYXBhY2l0eSB8fCAxLFxuXHRcdGN1cnJlbnQ6IDAsXG5cdFx0cXVldWU6IFtdLFxuXHRcdGZpcnN0SGVyZTogZmFsc2UsXG5cblx0XHR0YWtlOiBmdW5jdGlvbigpIHtcblx0XHRcdGlmIChzZW1hcGhvcmUuZmlyc3RIZXJlID09PSBmYWxzZSkge1xuICAgICAgICBcdFx0XHRzZW1hcGhvcmUuY3VycmVudCsrO1xuICAgICAgICBcdFx0XHRzZW1hcGhvcmUuZmlyc3RIZXJlID0gdHJ1ZTtcbiAgICAgICAgXHRcdFx0dmFyIGlzRmlyc3QgPSAxO1xuICAgICAgXHRcdFx0fSBlbHNlIHtcbiAgICAgICAgXHRcdFx0dmFyIGlzRmlyc3QgPSAwO1xuICAgICAgXHRcdFx0fVxuXHRcdFx0dmFyIGl0ZW0gPSB7IG46IDEgfTtcblxuXHRcdFx0aWYgKHR5cGVvZiBhcmd1bWVudHNbMF0gPT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0XHRpdGVtLnRhc2sgPSBhcmd1bWVudHNbMF07XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpdGVtLm4gPSBhcmd1bWVudHNbMF07XG5cdFx0XHR9XG5cblx0XHRcdGlmIChhcmd1bWVudHMubGVuZ3RoID49IDIpICB7XG5cdFx0XHRcdGlmICh0eXBlb2YgYXJndW1lbnRzWzFdID09ICdmdW5jdGlvbicpIGl0ZW0udGFzayA9IGFyZ3VtZW50c1sxXTtcblx0XHRcdFx0ZWxzZSBpdGVtLm4gPSBhcmd1bWVudHNbMV07XG5cdFx0XHR9XG5cblx0XHRcdHZhciB0YXNrID0gaXRlbS50YXNrO1xuXHRcdFx0aXRlbS50YXNrID0gZnVuY3Rpb24oKSB7IHRhc2soc2VtYXBob3JlLmxlYXZlKTsgfTtcblxuXHRcdFx0aWYgKHNlbWFwaG9yZS5jdXJyZW50ICsgaXRlbS5uIC0gaXNGaXJzdCA+IHNlbWFwaG9yZS5jYXBhY2l0eSkge1xuICAgICAgICBcdFx0XHRpZiAoaXNGaXJzdCA9PT0gMSkge1xuICAgICAgICBcdFx0XHRcdHNlbWFwaG9yZS5jdXJyZW50LS07XG4gICAgICAgIFx0XHRcdFx0c2VtYXBob3JlLmZpcnN0SGVyZSA9IGZhbHNlO1xuICAgICAgICBcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBzZW1hcGhvcmUucXVldWUucHVzaChpdGVtKTtcblx0XHRcdH1cblxuXHRcdFx0c2VtYXBob3JlLmN1cnJlbnQgKz0gaXRlbS5uIC0gaXNGaXJzdDtcblx0XHRcdGl0ZW0udGFzayhzZW1hcGhvcmUubGVhdmUpO1xuICAgICAgXHRcdFx0aWYgKGlzRmlyc3QgPT09IDEpIHNlbWFwaG9yZS5maXJzdEhlcmUgPSBmYWxzZTtcblx0XHR9LFxuXG5cdFx0bGVhdmU6IGZ1bmN0aW9uKG4pIHtcblx0XHRcdG4gPSBuIHx8IDE7XG5cblx0XHRcdHNlbWFwaG9yZS5jdXJyZW50IC09IG47XG5cblx0XHRcdGlmICghc2VtYXBob3JlLnF1ZXVlLmxlbmd0aCkge1xuXHRcdFx0XHRpZiAoc2VtYXBob3JlLmN1cnJlbnQgPCAwKSB7XG5cdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCdsZWF2ZSBjYWxsZWQgdG9vIG1hbnkgdGltZXMuJyk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHZhciBpdGVtID0gc2VtYXBob3JlLnF1ZXVlWzBdO1xuXG5cdFx0XHRpZiAoaXRlbS5uICsgc2VtYXBob3JlLmN1cnJlbnQgPiBzZW1hcGhvcmUuY2FwYWNpdHkpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRzZW1hcGhvcmUucXVldWUuc2hpZnQoKTtcblx0XHRcdHNlbWFwaG9yZS5jdXJyZW50ICs9IGl0ZW0ubjtcblxuXHRcdFx0bmV4dFRpY2soaXRlbS50YXNrKTtcblx0XHR9LFxuXG5cdFx0YXZhaWxhYmxlOiBmdW5jdGlvbihuKSB7XG5cdFx0XHRuID0gbiB8fCAxO1xuXHRcdFx0cmV0dXJuKHNlbWFwaG9yZS5jdXJyZW50ICsgbiA8PSBzZW1hcGhvcmUuY2FwYWNpdHkpO1xuXHRcdH1cblx0fTtcblxuXHRyZXR1cm4gc2VtYXBob3JlO1xufTtcblxuaWYgKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0Jykge1xuICAgIC8vIG5vZGUgZXhwb3J0XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBzZW1hcGhvcmU7XG59IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgIC8vIGFtZCBleHBvcnRcbiAgICBkZWZpbmUoZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gc2VtYXBob3JlO1xuICAgIH0pO1xufSBlbHNlIHtcbiAgICAvLyBicm93c2VyIGdsb2JhbFxuICAgIGdsb2JhbC5zZW1hcGhvcmUgPSBzZW1hcGhvcmU7XG59XG59KHRoaXMpKTtcbiJdLCJuYW1lcyI6WyJnbG9iYWwiLCJuZXh0VGljayIsImZuIiwic2V0VGltZW91dCIsInByb2Nlc3MiLCJzZW1hcGhvcmUiLCJjYXBhY2l0eSIsImN1cnJlbnQiLCJxdWV1ZSIsImZpcnN0SGVyZSIsInRha2UiLCJpc0ZpcnN0IiwiaXRlbSIsIm4iLCJhcmd1bWVudHMiLCJ0YXNrIiwibGVuZ3RoIiwibGVhdmUiLCJwdXNoIiwiRXJyb3IiLCJzaGlmdCIsImF2YWlsYWJsZSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/semaphore/lib/semaphore.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/semaphore/lib/semaphore.js":
/*!*************************************************!*\
  !*** ./node_modules/semaphore/lib/semaphore.js ***!
  \*************************************************/
/***/ ((module) => {

eval("\n(function(global) {\n    \"use strict\";\n    var nextTick = function(fn) {\n        setTimeout(fn, 0);\n    };\n    if (typeof process != \"undefined\" && process && typeof process.nextTick == \"function\") {\n        // node.js and the like\n        nextTick = process.nextTick;\n    }\n    function semaphore(capacity) {\n        var semaphore = {\n            capacity: capacity || 1,\n            current: 0,\n            queue: [],\n            firstHere: false,\n            take: function() {\n                if (semaphore.firstHere === false) {\n                    semaphore.current++;\n                    semaphore.firstHere = true;\n                    var isFirst = 1;\n                } else {\n                    var isFirst = 0;\n                }\n                var item = {\n                    n: 1\n                };\n                if (typeof arguments[0] == \"function\") {\n                    item.task = arguments[0];\n                } else {\n                    item.n = arguments[0];\n                }\n                if (arguments.length >= 2) {\n                    if (typeof arguments[1] == \"function\") item.task = arguments[1];\n                    else item.n = arguments[1];\n                }\n                var task = item.task;\n                item.task = function() {\n                    task(semaphore.leave);\n                };\n                if (semaphore.current + item.n - isFirst > semaphore.capacity) {\n                    if (isFirst === 1) {\n                        semaphore.current--;\n                        semaphore.firstHere = false;\n                    }\n                    return semaphore.queue.push(item);\n                }\n                semaphore.current += item.n - isFirst;\n                item.task(semaphore.leave);\n                if (isFirst === 1) semaphore.firstHere = false;\n            },\n            leave: function(n) {\n                n = n || 1;\n                semaphore.current -= n;\n                if (!semaphore.queue.length) {\n                    if (semaphore.current < 0) {\n                        throw new Error(\"leave called too many times.\");\n                    }\n                    return;\n                }\n                var item = semaphore.queue[0];\n                if (item.n + semaphore.current > semaphore.capacity) {\n                    return;\n                }\n                semaphore.queue.shift();\n                semaphore.current += item.n;\n                nextTick(item.task);\n            },\n            available: function(n) {\n                n = n || 1;\n                return semaphore.current + n <= semaphore.capacity;\n            }\n        };\n        return semaphore;\n    }\n    ;\n    if (true) {\n        // node export\n        module.exports = semaphore;\n    } else {}\n})(void 0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2VtYXBob3JlL2xpYi9zZW1hcGhvcmUuanMiLCJtYXBwaW5ncyI6IjtBQUFFLFVBQVNBLE1BQU07SUFFakI7SUFFQSxJQUFJQyxXQUFXLFNBQVVDLEVBQUU7UUFBSUMsV0FBV0QsSUFBSTtJQUFJO0lBQ2xELElBQUksT0FBT0UsV0FBVyxlQUFlQSxXQUFXLE9BQU9BLFFBQVFILFFBQVEsSUFBSSxZQUFZO1FBQ3RGLHVCQUF1QjtRQUN2QkEsV0FBV0csUUFBUUgsUUFBUTtJQUM1QjtJQUVBLFNBQVNJLFVBQVVDLFFBQVE7UUFDMUIsSUFBSUQsWUFBWTtZQUNmQyxVQUFVQSxZQUFZO1lBQ3RCQyxTQUFTO1lBQ1RDLE9BQU8sRUFBRTtZQUNUQyxXQUFXO1lBRVhDLE1BQU07Z0JBQ0wsSUFBSUwsVUFBVUksU0FBUyxLQUFLLE9BQU87b0JBQzNCSixVQUFVRSxPQUFPO29CQUNqQkYsVUFBVUksU0FBUyxHQUFHO29CQUN0QixJQUFJRSxVQUFVO2dCQUNoQixPQUFPO29CQUNMLElBQUlBLFVBQVU7Z0JBQ2hCO2dCQUNOLElBQUlDLE9BQU87b0JBQUVDLEdBQUc7Z0JBQUU7Z0JBRWxCLElBQUksT0FBT0MsU0FBUyxDQUFDLEVBQUUsSUFBSSxZQUFZO29CQUN0Q0YsS0FBS0csSUFBSSxHQUFHRCxTQUFTLENBQUMsRUFBRTtnQkFDekIsT0FBTztvQkFDTkYsS0FBS0MsQ0FBQyxHQUFHQyxTQUFTLENBQUMsRUFBRTtnQkFDdEI7Z0JBRUEsSUFBSUEsVUFBVUUsTUFBTSxJQUFJLEdBQUk7b0JBQzNCLElBQUksT0FBT0YsU0FBUyxDQUFDLEVBQUUsSUFBSSxZQUFZRixLQUFLRyxJQUFJLEdBQUdELFNBQVMsQ0FBQyxFQUFFO3lCQUMxREYsS0FBS0MsQ0FBQyxHQUFHQyxTQUFTLENBQUMsRUFBRTtnQkFDM0I7Z0JBRUEsSUFBSUMsT0FBT0gsS0FBS0csSUFBSTtnQkFDcEJILEtBQUtHLElBQUksR0FBRztvQkFBYUEsS0FBS1YsVUFBVVksS0FBSztnQkFBRztnQkFFaEQsSUFBSVosVUFBVUUsT0FBTyxHQUFHSyxLQUFLQyxDQUFDLEdBQUdGLFVBQVVOLFVBQVVDLFFBQVEsRUFBRTtvQkFDdkQsSUFBSUssWUFBWSxHQUFHO3dCQUNsQk4sVUFBVUUsT0FBTzt3QkFDakJGLFVBQVVJLFNBQVMsR0FBRztvQkFDdkI7b0JBQ1AsT0FBT0osVUFBVUcsS0FBSyxDQUFDVSxJQUFJLENBQUNOO2dCQUM3QjtnQkFFQVAsVUFBVUUsT0FBTyxJQUFJSyxLQUFLQyxDQUFDLEdBQUdGO2dCQUM5QkMsS0FBS0csSUFBSSxDQUFDVixVQUFVWSxLQUFLO2dCQUNuQixJQUFJTixZQUFZLEdBQUdOLFVBQVVJLFNBQVMsR0FBRztZQUNoRDtZQUVBUSxPQUFPLFNBQVNKLENBQUM7Z0JBQ2hCQSxJQUFJQSxLQUFLO2dCQUVUUixVQUFVRSxPQUFPLElBQUlNO2dCQUVyQixJQUFJLENBQUNSLFVBQVVHLEtBQUssQ0FBQ1EsTUFBTSxFQUFFO29CQUM1QixJQUFJWCxVQUFVRSxPQUFPLEdBQUcsR0FBRzt3QkFDMUIsTUFBTSxJQUFJWSxNQUFNO29CQUNqQjtvQkFFQTtnQkFDRDtnQkFFQSxJQUFJUCxPQUFPUCxVQUFVRyxLQUFLLENBQUMsRUFBRTtnQkFFN0IsSUFBSUksS0FBS0MsQ0FBQyxHQUFHUixVQUFVRSxPQUFPLEdBQUdGLFVBQVVDLFFBQVEsRUFBRTtvQkFDcEQ7Z0JBQ0Q7Z0JBRUFELFVBQVVHLEtBQUssQ0FBQ1ksS0FBSztnQkFDckJmLFVBQVVFLE9BQU8sSUFBSUssS0FBS0MsQ0FBQztnQkFFM0JaLFNBQVNXLEtBQUtHLElBQUk7WUFDbkI7WUFFQU0sV0FBVyxTQUFTUixDQUFDO2dCQUNwQkEsSUFBSUEsS0FBSztnQkFDVCxPQUFPUixVQUFVRSxPQUFPLEdBQUdNLEtBQUtSLFVBQVVDLFFBQVE7WUFDbkQ7UUFDRDtRQUVBLE9BQU9EO0lBQ1I7O0lBRUEsSUFBSSxJQUFtQixFQUFVO1FBQzdCLGNBQWM7UUFDZGtCLE9BQU9ELE9BQU8sR0FBR2pCO0lBQ3JCLE9BQU8sRUFRTjtBQUNELEdBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9henVyZS1vcGVuLWFpLWFjY2VsZXJhdG9yLy4vbm9kZV9tb2R1bGVzL3NlbWFwaG9yZS9saWIvc2VtYXBob3JlLmpzPzAwMjciXSwic291cmNlc0NvbnRlbnQiOlsiOyhmdW5jdGlvbihnbG9iYWwpIHtcblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgbmV4dFRpY2sgPSBmdW5jdGlvbiAoZm4pIHsgc2V0VGltZW91dChmbiwgMCk7IH1cbmlmICh0eXBlb2YgcHJvY2VzcyAhPSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzICYmIHR5cGVvZiBwcm9jZXNzLm5leHRUaWNrID09ICdmdW5jdGlvbicpIHtcblx0Ly8gbm9kZS5qcyBhbmQgdGhlIGxpa2Vcblx0bmV4dFRpY2sgPSBwcm9jZXNzLm5leHRUaWNrO1xufVxuXG5mdW5jdGlvbiBzZW1hcGhvcmUoY2FwYWNpdHkpIHtcblx0dmFyIHNlbWFwaG9yZSA9IHtcblx0XHRjYXBhY2l0eTogY2FwYWNpdHkgfHwgMSxcblx0XHRjdXJyZW50OiAwLFxuXHRcdHF1ZXVlOiBbXSxcblx0XHRmaXJzdEhlcmU6IGZhbHNlLFxuXG5cdFx0dGFrZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoc2VtYXBob3JlLmZpcnN0SGVyZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgXHRcdFx0c2VtYXBob3JlLmN1cnJlbnQrKztcbiAgICAgICAgXHRcdFx0c2VtYXBob3JlLmZpcnN0SGVyZSA9IHRydWU7XG4gICAgICAgIFx0XHRcdHZhciBpc0ZpcnN0ID0gMTtcbiAgICAgIFx0XHRcdH0gZWxzZSB7XG4gICAgICAgIFx0XHRcdHZhciBpc0ZpcnN0ID0gMDtcbiAgICAgIFx0XHRcdH1cblx0XHRcdHZhciBpdGVtID0geyBuOiAxIH07XG5cblx0XHRcdGlmICh0eXBlb2YgYXJndW1lbnRzWzBdID09ICdmdW5jdGlvbicpIHtcblx0XHRcdFx0aXRlbS50YXNrID0gYXJndW1lbnRzWzBdO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aXRlbS5uID0gYXJndW1lbnRzWzBdO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoYXJndW1lbnRzLmxlbmd0aCA+PSAyKSAge1xuXHRcdFx0XHRpZiAodHlwZW9mIGFyZ3VtZW50c1sxXSA9PSAnZnVuY3Rpb24nKSBpdGVtLnRhc2sgPSBhcmd1bWVudHNbMV07XG5cdFx0XHRcdGVsc2UgaXRlbS5uID0gYXJndW1lbnRzWzFdO1xuXHRcdFx0fVxuXG5cdFx0XHR2YXIgdGFzayA9IGl0ZW0udGFzaztcblx0XHRcdGl0ZW0udGFzayA9IGZ1bmN0aW9uKCkgeyB0YXNrKHNlbWFwaG9yZS5sZWF2ZSk7IH07XG5cblx0XHRcdGlmIChzZW1hcGhvcmUuY3VycmVudCArIGl0ZW0ubiAtIGlzRmlyc3QgPiBzZW1hcGhvcmUuY2FwYWNpdHkpIHtcbiAgICAgICAgXHRcdFx0aWYgKGlzRmlyc3QgPT09IDEpIHtcbiAgICAgICAgXHRcdFx0XHRzZW1hcGhvcmUuY3VycmVudC0tO1xuICAgICAgICBcdFx0XHRcdHNlbWFwaG9yZS5maXJzdEhlcmUgPSBmYWxzZTtcbiAgICAgICAgXHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gc2VtYXBob3JlLnF1ZXVlLnB1c2goaXRlbSk7XG5cdFx0XHR9XG5cblx0XHRcdHNlbWFwaG9yZS5jdXJyZW50ICs9IGl0ZW0ubiAtIGlzRmlyc3Q7XG5cdFx0XHRpdGVtLnRhc2soc2VtYXBob3JlLmxlYXZlKTtcbiAgICAgIFx0XHRcdGlmIChpc0ZpcnN0ID09PSAxKSBzZW1hcGhvcmUuZmlyc3RIZXJlID0gZmFsc2U7XG5cdFx0fSxcblxuXHRcdGxlYXZlOiBmdW5jdGlvbihuKSB7XG5cdFx0XHRuID0gbiB8fCAxO1xuXG5cdFx0XHRzZW1hcGhvcmUuY3VycmVudCAtPSBuO1xuXG5cdFx0XHRpZiAoIXNlbWFwaG9yZS5xdWV1ZS5sZW5ndGgpIHtcblx0XHRcdFx0aWYgKHNlbWFwaG9yZS5jdXJyZW50IDwgMCkge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcignbGVhdmUgY2FsbGVkIHRvbyBtYW55IHRpbWVzLicpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHR2YXIgaXRlbSA9IHNlbWFwaG9yZS5xdWV1ZVswXTtcblxuXHRcdFx0aWYgKGl0ZW0ubiArIHNlbWFwaG9yZS5jdXJyZW50ID4gc2VtYXBob3JlLmNhcGFjaXR5KSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0c2VtYXBob3JlLnF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRzZW1hcGhvcmUuY3VycmVudCArPSBpdGVtLm47XG5cblx0XHRcdG5leHRUaWNrKGl0ZW0udGFzayk7XG5cdFx0fSxcblxuXHRcdGF2YWlsYWJsZTogZnVuY3Rpb24obikge1xuXHRcdFx0biA9IG4gfHwgMTtcblx0XHRcdHJldHVybihzZW1hcGhvcmUuY3VycmVudCArIG4gPD0gc2VtYXBob3JlLmNhcGFjaXR5KTtcblx0XHR9XG5cdH07XG5cblx0cmV0dXJuIHNlbWFwaG9yZTtcbn07XG5cbmlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHtcbiAgICAvLyBub2RlIGV4cG9ydFxuICAgIG1vZHVsZS5leHBvcnRzID0gc2VtYXBob3JlO1xufSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICAvLyBhbWQgZXhwb3J0XG4gICAgZGVmaW5lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHNlbWFwaG9yZTtcbiAgICB9KTtcbn0gZWxzZSB7XG4gICAgLy8gYnJvd3NlciBnbG9iYWxcbiAgICBnbG9iYWwuc2VtYXBob3JlID0gc2VtYXBob3JlO1xufVxufSh0aGlzKSk7XG4iXSwibmFtZXMiOlsiZ2xvYmFsIiwibmV4dFRpY2siLCJmbiIsInNldFRpbWVvdXQiLCJwcm9jZXNzIiwic2VtYXBob3JlIiwiY2FwYWNpdHkiLCJjdXJyZW50IiwicXVldWUiLCJmaXJzdEhlcmUiLCJ0YWtlIiwiaXNGaXJzdCIsIml0ZW0iLCJuIiwiYXJndW1lbnRzIiwidGFzayIsImxlbmd0aCIsImxlYXZlIiwicHVzaCIsIkVycm9yIiwic2hpZnQiLCJhdmFpbGFibGUiLCJleHBvcnRzIiwibW9kdWxlIiwiZGVmaW5lIiwiYW1kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/semaphore/lib/semaphore.js\n");

/***/ })

};
;